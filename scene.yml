objects:
  # Light
  # Use an angled directional light as the sun
  #   https://docs.unity3d.com/ja/2019.4/Manual/UsingLights.html
  - position: !vec [10, 10, 10]
    rotation: !euler [70, 0, 0]
    color: !vec [1, 1, 1]
    lightType: directional
    tags: [light]
  # Ground
  - position: !vec [0, 0, 0]
    rotation: !euler [0, 0, 0]
    scale: !vec [20, 1, 20]
    color: !vec [0, 0.4, 0]
    tags: [plane, material, collider]
  # Slope and stage
  - position: !vec [0, 0, 7]
    rotation: !euler [0, 90, 0]
    tags: [model, collider]
    model: !load_file "scene_data/slope-and-stage.glb"
  # Half-pipe
  - position: !vec [5.5, 0, 10.5]
    rotation: !euler [0, 90, 0]
    tags: [model, collider]
    model: !load_file "scene_data/halfpipe.glb"
  # Red ball
  - $name: redBall
    position: !vec [8, 30, 10]
    rotation: !quat [1, 0, 0, 0]
    color: !vec [1, 0, 0]
    mass: 10.0  # ".0" is necessary to indicate it is float
    tags: [sphere, material, collider, physics]
  # GLB loading
  - position: !vec [-4, 1, 3]
    rotation: !euler [0, 0, 0]
    tags: [model, collider]
    model: !load_file "scene_data/PUSHILIN_Plane.glb"
  # Object hierarchy test (small, non-colliding ball as a child of the red ball)
  - parent: !ref redBall
    position: !vec [0, 1, 0]
    rotation: !euler [0, 0, 0]
    scale: !vec [0.3, 0.3, 0.3]
    color: !vec [1, 1, 1]
    tags: [sphere, material]
  # Rackets (grabbable)
  - position: !vec [3, 1.2, 0.5]
    rotation: !euler [180, 90, 90]
    model: !load_file "scene_data/racket.glb"
    restitution: 0.99
    tags: [model, collider, grabbable]
  - position: !vec [3, 1.2, 3.5]
    rotation: !euler [180, 90, 90]
    model: !load_file "scene_data/racket.glb"
    restitution: 0.99
    tags: [model, collider, grabbable]
  # Table
  - position: !vec [3, 1.05, 2]
    rotation: !euler [90, 0, 0]
    scale: !vec [1, 2, 0.1]
    color: !vec [0, 0, 1]
    restitution: 0.99
    tags: [cube, material, collider]
  # Ball
  - $name: ball
    position: !vec [3, 2, 2]
    rotation: !euler [0, 0, 0]
    scale: !vec [0.1, 0.1, 0.1]
    color: !vec [1, 1, 0]
    velocity: !vec [0, 0, -40]
    restitution: 0.99
    mass: 0.01
    tags: [sphere, material, collider, physics]
  # Ball launch buttons (collision handler test)
  - position: !vec [2.2, 1.4, 0.9]
    rotation: !euler [0, 0, 0]
    scale: !vec [0.3, 0.3, 0.3]
    color: !vec [1, 1, 0]
    objectToMove: !ref ball
    destination: !vec [3, 1.4, 2]
    # Because velocity is in local coord, rotation should be reset to correctly set new velocity
    destRotation: !euler [0, 0, 0]
    launchVelocity: !vec [0, 0, -40]
    launchAngularVelocity: !vec [0, 0, 0]
    tags: [cube, material, collider, objectMoveButton]
  - position: !vec [3.8, 1.4, 3.1]
    rotation: !euler [0, 0, 0]
    scale: !vec [0.3, 0.3, 0.3]
    color: !vec [1, 1, 0]
    objectToMove: !ref ball
    destination: !vec [3, 1.4, 2]
    # Because velocity is in local coord, rotation should be reset to correctly set new velocity
    destRotation: !euler [0, 0, 0]
    launchVelocity: !vec [0, 0, 40]
    launchAngularVelocity: !vec [0, 0, 0]
    tags: [cube, material, collider, objectMoveButton]
  # Text test
  - position: !vec [-2, 3, 3]
    rotation: !euler [0, 0, 0]
    scale: !vec [0.3, 0.3, 0.3]
    text: "Hello! <b>Bold</b> 漢字 Σ Д"
    useRichText: true
    fontSize: 36
    tags: [text]
  # ------- Shooting game -------
  # Raygun
  - position: !vec [1, 1, 1]
    rotation: !euler [0, 0, 0]
    model: !load_file "scene_data/raygun.glb"
    audioFile: !load_file "scene_data/beam.wav"
    audioVolume: 0.3
    audioPlaying: false
    audioLoop: false
    tags: [model, collider, grabbable, audioPlayer]
    codes: [!load_file "wasm/raygun.wasm"]
    bulletCode: !load_file "wasm/bullet.wasm"